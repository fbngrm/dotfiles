[[snippets]]
  description = "enable wifi interface"
  command = "sudo ip link set wlp4s0 up"
  output = ""

[[snippets]]
  description = "bash in docker image"
  command = "docker run -it --entrypoint bash "
  output = ""

[[snippets]]
  description = "k8s pod logs"
  command = "k logs -p -c web <target_pod>"
  output = ""

[[snippets]]
  description = "restore kde bar"
  command = "rm rm ~/.config/plasma-org.kde.plasma.desktop-appletsrc\\n"
  output = ""

[[snippets]]
  description = "random password"
  command = "< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c32"
  output = ""

[[snippets]]
  description = "k8s pod shell"
  command = "kubectl exec -it <target_pod> -- /bin/bash"
  output = ""

[[snippets]]
  description = "get k8s cluster credentials"
  command = "gcloud container clusters get-credentials --region=europe-west1-c eu-prod"
  output = ""

[[snippets]]
  description = "remove docker-compose images"
  command = "docker-compose stop && docker-compose rm -f"
  output = ""

[[snippets]]
  description = "forward to k8s db"
  command = "kubectl port-forward <target_pod> <port=5432>:5432"
  output = ""

[[snippets]]
  description = "git last branches worked on"
  command = "git for-each-ref --sort=-committerdate refs/heads/"
  output = ""

[[snippets]]
  description = "git show filenames of changed files between HEAD and master"
  command = "git diff --name-only HEAD master"
  output = ""

[[snippets]]
  description = "git show diff of file between HEAD and master"
  command = "git diff HEAD master -- "
  output = ""

[[snippets]]
  description = "log into k8s container"
  command = "kubectl exec --stdin --tty <container> -- /bin/bash"
  output = ""

[[snippets]]
  description = "import postgres backup"
  command = "psql -a -b -e -h localhost --username postgres -d uk_pento < /data/prod-db"
  output = ""

[[snippets]]
  description = "create postgres db in docker"
  command = "docker exec -it 24f09dc29ae7 psql -U postgres -d postgres -c \"CREATE DATABASE uk_pento;\""
  output = ""

[[snippets]]
  description = "backup postgres from docker container"
  command = "docker exec -t 2e3578f231de pg_dumpall -c -U postgres | gzip > /data/dump_`date +%d-%m-%Y\"_\"%H_%M_%S`.gz"
  output = ""

[[snippets]]
  description = "diskspace"
  command = "df -h"
  output = ""

[[snippets]]
  description = "file size"
  command = "du -sh ../pentoapp"
  output = ""

[[snippets]]
  description = "pacman list orphan packages"
  command = "sudo pacman -Qtdq"
  output = ""

[[snippets]]
  description = "pacman remove orphan packages"
  command = "sudo pacman -Rns $(pacman -Qtdq)"
  output = ""

[[snippets]]
  description = "pacman remove cached packages that not currently installed"
  command = "sudo pacman -Sc"
  output = ""

[[snippets]]
  description = "pacman dry run cache pruning"
  command = "paccache -d"
  output = ""

[[snippets]]
  description = "clean systemd journal"
  command = "sudo journalctl --vacuum-size=50M\\n"
  output = ""

[[snippets]]
  description = "connect wifi with wpa_supplicant"
  command = "sudo wpa_supplicant -B -i wlp4s0 -c /etc/wpa_supplicant/wpa_supplicant.conf"
  output = ""

[[snippets]]
  description = "colortest"
  command = "msgcat --color=test"
  output = ""

[[snippets]]
  description = "list network adapters"
  command = "rfkill list all"
  output = ""

[[snippets]]
  description = "unblock network adapter"
  command = "rfkill unblock 1"
  output = ""

[[snippets]]
  description = "wifi blocked?"
  command = "sudo rfkill list all"
  output = ""

[[snippets]]
  description = "unblock wifi"
  command = "rfkill unblock 1"
  output = ""

[[snippets]]
  description = "find duplicate lines in a file"
  command = "sort sl-employee-emails.txt | uniq -c"
  output = ""

[[snippets]]
  description = "mysql monitor connections"
  command = "mysqladmin -u root -p -i 1 processlist"
  output = ""

[[snippets]]
  description = "wifi"
  command = "sudo dhcpcd enp2s0"
  output = ""

[[snippets]]
  description = "load xresources"
  command = "xrdb -merge ~/.Xresources"
  output = ""

[[snippets]]
  description = "start local mysql/mariadb"
  command = "systemctl start mariadb"
  output = ""

[[snippets]]
  description = "extract a k8s secret"
  command = "kubectl get secret similar-products-env-v6 -o json | grep -E '\"\\.?env\":' | sed 's/^.* \"\\(.*\\)\"$/\\1/' | base64 -d"
  output = ""

[[snippets]]
  description = "filter top by process"
  command = "top -p $(pgrep -d',' proxy)"
  output = ""

[[snippets]]
  description = "mount usb drive to /media/usb-dive"
  command = "sudo mount -t ntfs-3g -o uid=1000,gid=1000 /dev/sdb1 /media/usb-drive"
  output = ""

[[snippets]]
  description = "ssh gnome-keyring-bug workaround"
  command = "SSH_AUTH_SOCK=0 ssh SERVER_ADDR"
  output = ""

[[snippets]]
  description = "photo to video"
  command = "ffmpeg -r 15 -pattern_type glob -i '*.JPG' -c:v libx264 -vf fps=25 -pix_fmt yuv420p out.mp4"
  output = ""

[[snippets]]
  description = "gcloud switch cluster"
  command = "gcloud container clusters get-credentials staging --zone europe-west1-d --project fitanalytics-staging"
  output = ""

[[snippets]]
  description = "kubectl use context"
  command = "kubectl config use-context "
  output = ""

[[snippets]]
  description = "get gke contexts"
  command = "kubectl config get-contexts"
  output = ""

[[snippets]]
  description = "get job"
  command = "kubectl --context=gke_fitanalytics-staging_europe-west1-d_staging -n feed-import get jobs -l release=in-stock-norm-all-1541427261-ms"
  output = ""

[[snippets]]
  description = "Create mysql 5.7 container"
  command = "docker run --name test-mysql -e MYSQL_ROOT_PASSWORD=secret -e MYSQL_USER=reader -e MYSQL_PASSWORD=\"$MYSQL_PASS\" -v /var/lib/mysql:/var/lib/mysql -d mysql:5.7"
  output = ""

[[snippets]]
  description = "Start a mysql server instance"
  command = "docker run --rm --name mysql-local -v /data/fita/db/mysql:/var/lib/mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mysql:5.7"
  output = ""

[[snippets]]
  description = "Connect to MySQL from the MySQL command line client"
  command = "docker run -it --link mysql-local:mysql --rm mysql sh -c 'exec mysql -h\"$MYSQL_PORT_3306_TCP_ADDR\" -P\"$MYSQL_PORT_3306_TCP_PORT\" -ureader -p'"
  output = ""

[[snippets]]
  description = "Connect to MySQL from an application in another Docker container"
  command = "docker run --name some-app --link some-mysql:mysql -d application-that-uses-mysql"
  output = ""

[[snippets]]
  description = "check wifi connection status"
  command = "iw wlp4s0 link"
  output = ""

[[snippets]]
  description = "scan networks"
  command = "sudo wpa_cli -i wlp4s0 "
  output = ""

[[snippets]]
  description = "kubetcl port forwarding"
  command = "kubectl -n staging8 port-forward staging8-gocload-5cc7cb6b45-hnk8m 9000:9000"
  output = ""

[[snippets]]
  description = "deploy to staging"
  command = "git push origin -f MYBRANCH:stagingX"
  output = ""

[[snippets]]
  description = "extract links from file"
  command = "cat <file_path> | grep -o 'http[s]\\?:\\/\\/[[:alnum:]\\%\\/_\\#.-]*'"
  output = ""

[[snippets]]
  description = "diff files"
  command = "diff -y -a <a> <b> | colordiff"
  output = ""

[[snippets]]
  description = "diff tmp files"
  command = "diff -y -a /tmp/a /tmp/b | colordiff"
  output = ""

[[snippets]]
  description = "diff csv"
  command = "git diff --color-words=. /tmp/a /tmp/b"
  output = ""

[[snippets]]
  description = "list webcam settings"
  command = "v4l2-ctl -l"
  output = ""

[[snippets]]
  description = "list webcam resolutions"
  command = "v4l2-ctl --list-formats-ext"
  output = ""

[[snippets]]
  description = "list webcam framesizes for outout format"
  command = "v4l2-ctl --list-framesizes=YUYV"
  output = ""

[[snippets]]
  description = "extract P11Db totals"
  command = "sed -n '/P11Db/,/\\/P11Db/{/P11Db\\|\\/P11Db/d;p}' /tmp/t"
  output = ""

[[snippets]]
  description = "update pacman dbs"
  command = "sudo pacman -Syy"
  output = ""

[[snippets]]
  description = "check service on port"
  command = "ss -tunelp | grep 6600"
  output = ""
